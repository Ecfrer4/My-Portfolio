/* Swarm Shooter Game
Use W A S D to move
Click the mouse to shoot*/

let player
let enemies = [];
let bullets = [];

function setup() {
  createCanvas(800, 600);
  player = new Player(width / 2, height / 2);
  for (let i = 0; i < random(1, 15); i++) {
    enemies.push(new Enemy(random(800, 900), (random(600, 700))));
  }
  for (let i = 0; i < random(1, 15); i++) {
    enemies.push(new Enemy(random(800, 900), (random(-height))));
  }
  for (let i = 0; i < random(1, 15); i++) {
    enemies.push(new Enemy(random(-width), (random(600, 700))));
  }
  for (let i = 0; i < random(1, 15); i++) {
    enemies.push(new Enemy(random(-width), (random(-height))));
  }
}

function draw() {
  background(0);
  player.display();
  player.move();

  for (let i = enemies.length - 1; i >= 0; i--) {
    enemies[i].display();
    enemies[i].move();
    for (let j = 0; j < bullets.length; j++) {
      if (bullets[j].intersect(enemies[i])) {
        enemies.splice(i, 1);
        bullets.splice(j, 1);
      }
    }
  }

  for (let i = bullets.length - 1; i >= 0; i--) {
    bullets[i].move();
    bullets[i].display();
    if (bullets[i].x > width) {
      bullets.splice(i, 1);
    } else if (bullets[i].x < 0) {
      bullets.splice(i, 1);
    } else if (bullets[i].y > height) {
      bullets.splice(i, 1);
    } else if (bullets[i].y < 0) {
      bullets.splice(i, 1);
    }
  }
}

function mousePressed() {
  bullets.push(new Bullet(player.x, player.y));
}

class Player {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.speed = 0;
    this.speedx = 3;
    this.speedy = 3;
  }

  move() {
    if (keyIsDown(68)) {
      this.x += this.speedx;
    }
    if (keyIsDown(65)) {
      this.x -= this.speedx;
    }
    if (keyIsDown(87)) {
      this.y -= this.speedy;
    }
    if (keyIsDown(83)) {
      this.y += this.speedy;
    }
  }


  display() {
    push();
    fill("gray");
    circle(this.x, this.y, 30);
    pop();
  }
}

class Enemy {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.diameter = random(20, 50);
    this.speedx = random(0.005, 0.01);
    this.speedy = random(0.005, 0.01);
  }

  move() {
    this.x = this.x + ((player.x - this.x) * this.speedx);
    this.y = this.y + ((player.y - this.y) * this.speedy);
  }

  display() {
    push();
    fill("red");
    circle(this.x, this.y, this.diameter);
    pop();
  }

}

class Bullet {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.diameter = 15;
    this.speed = 0.08;
    this.dirx = x - mouseX;
    this.diry = y - mouseY;
  }

  move() {
    this.x = this.x - ((this.dirx) * this.speed);
    this.y = this.y - ((this.diry) * this.speed);
  }

  display() {
    push();
    fill(random(255), random(255), random(255));
    circle(this.x, this.y, this.diameter);
    pop();
  }


  intersect(enemies) {
    let d = dist(this.x, this.y, enemies.x, enemies.y);
    if (d < this.diameter / 2 + enemies.diameter / 2) {
      return true;
    }
    return false;
  }


}
